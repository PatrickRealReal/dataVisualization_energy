{"ast":null,"code":"import _objectSpread from \"/Users/patrickxu/Documents/Document/Rice/Energy Cognito/Task_deliverables/Task3_Web-Application/energydash/test_dash/presentation_ver 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/patrickxu/Documents/Document/Rice/Energy Cognito/Task_deliverables/Task3_Web-Application/energydash/test_dash/presentation_ver 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/patrickxu/Documents/Document/Rice/Energy Cognito/Task_deliverables/Task3_Web-Application/energydash/test_dash/presentation_ver 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/patrickxu/Documents/Document/Rice/Energy Cognito/Task_deliverables/Task3_Web-Application/energydash/test_dash/presentation_ver 2/src/components/Demoline.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { DualAxes, Line } from \"@ant-design/plots\";\nimport { Button, DatePicker, FloatButton, message, Select, Space } from \"antd\";\nimport DemoColumn from \"./DemoColumn\";\nimport DemoTabel from \"./DemoTabel\";\nimport { BarChartOutlined, FundOutlined, LineChartOutlined, UnorderedListOutlined } from \"@ant-design/icons\";\nexport var DemoLine = function DemoLine() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState([{\n      isShow: true,\n      label: \"line\"\n    }, {\n      isShow: false,\n      label: \"pillar\"\n    }, {\n      isShow: false,\n      label: \"table\"\n    }]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    TConfig = _useState4[0],\n    setTConfig = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    data2 = _useState6[0],\n    setData2 = _useState6[1];\n  var _useState7 = useState(\"Hokkaido\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    area = _useState8[0],\n    setArea = _useState8[1];\n  var _useCallbackState = useCallbackState([\"price\"]),\n    _useCallbackState2 = _slicedToArray(_useCallbackState, 2),\n    labelName = _useCallbackState2[0],\n    setLabelName = _useCallbackState2[1];\n  var _useCallbackState3 = useCallbackState([\"0\"]),\n    _useCallbackState4 = _slicedToArray(_useCallbackState3, 2),\n    nda_values = _useCallbackState4[0],\n    setnda_values = _useCallbackState4[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    dateRange = _useState10[0],\n    setDateRange = _useState10[1];\n  var _useState11 = useState([{\n      label: \"Hokkaido\",\n      value: \"Hokkaido\"\n    }, {\n      label: \"Tokyo\",\n      value: \"Tokyo\"\n    }, {\n      label: \"Chubu\",\n      value: \"Chubu\"\n    }, {\n      label: \"Kansai\",\n      value: \"Kansai\"\n    }, {\n      label: \"Chugoku\",\n      value: \"Chugoku\"\n    }, {\n      label: \"Shikoku\",\n      value: \"Shikoku\"\n    }, {\n      label: \"Kyushu\",\n      value: \"Kyushu\"\n    }]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    areaConfig = _useState12[0],\n    setAreaConfig = _useState12[1];\n  var plainOptions = [{\n    label: \"price\",\n    value: \"price\"\n  }, {\n    label: \"demand\",\n    value: \"demand\"\n  }, {\n    label: \"load\",\n    value: \"load\"\n  }];\n  var config2 = {\n    data: [data, data2],\n    xField: \"year\",\n    yField: [\"val1\", \"val2\"],\n    xAxis: {\n      type: \"time\"\n    },\n    geometryOptions: [{\n      geometry: \"line\",\n      seriesField: \"category\",\n      lineStyle: {\n        lineWidth: 3,\n        lineDash: [5, 5]\n      },\n      smooth: true\n    }, {\n      geometry: \"line\",\n      seriesField: \"category\",\n      point: {}\n    }]\n  };\n  function asyncTest(test) {\n    var list = [];\n    if (labelName.length === 2) {\n      var filteredData = test.filter(function (obj) {\n        return obj.hasOwnProperty(\"AvgPrice\");\n      });\n      var filteredData2 = test.filter(function (obj) {\n        return obj.hasOwnProperty(\"AvgDemand\");\n      });\n      var filteredData3 = test.filter(function (obj) {\n        return obj.hasOwnProperty(\"Load\");\n      });\n      if (labelName.includes(\"price\")) {\n        if (labelName.includes(\"demand\")) {\n          //price-demand\n          var l1 = filteredData.map(function (d, i) {\n            return {\n              year: new Date(d.DateTime * 1000),\n              val1: d.AvgPrice,\n              category: d.Area + \"_price\",\n              index: i + d.AvgPrice + d.Area\n            };\n          });\n          var l2 = filteredData2.map(function (d, i) {\n            return {\n              year: new Date(d.DateTime * 1000),\n              val2: d.AvgDemand,\n              category: d.Area + \"_demand\",\n              index: i + d.AvgDemand + d.Area\n            };\n          });\n          setData(l1);\n          setData2(l2);\n        } else {\n          //price-load\n          var _l = filteredData.map(function (d, i) {\n            return {\n              year: new Date(d.DateTime * 1000),\n              val1: d.AvgPrice,\n              category: d.Area + \"_price\",\n              index: i + d.AvgPrice + d.Area\n            };\n          });\n          var _l2 = filteredData3.map(function (d, i) {\n            return {\n              year: new Date(d.DateTime * 1000),\n              val2: d.Load,\n              category: d.Area + \"_load\",\n              index: i + d.Load + d.Area\n            };\n          });\n          setData(_l);\n          setData2(_l2);\n        }\n      } else {\n        //demand-load\n        var _l3 = filteredData2.map(function (d, i) {\n          return {\n            year: new Date(d.DateTime * 1000),\n            val1: d.AvgDemand,\n            category: d.Area + \"_demand\",\n            index: i + d.AvgDemand + d.Area\n          };\n        });\n        var _l4 = filteredData3.map(function (d, i) {\n          return {\n            year: new Date(d.DateTime * 1000),\n            val2: d.Load,\n            category: d.Area + \"_load\",\n            index: i + d.Load + d.Area\n          };\n        });\n        setData(_l3);\n        setData2(_l4);\n      }\n    } else {\n      labelName.map(function (it) {\n        if (it == \"price\") {\n          var _filteredData = test.filter(function (obj) {\n            return obj.hasOwnProperty(\"AvgPrice\");\n          });\n          var p = _filteredData.map(function (d, i) {\n            return {\n              year: new Date(d.DateTime * 1000),\n              value: d.AvgPrice,\n              category: d.Area + \"_price\",\n              index: i + d.AvgPrice + d.Area + \"_price\" + i\n            };\n          });\n          list = [].concat(_toConsumableArray(list), _toConsumableArray(p));\n        }\n        if (it == \"demand\") {\n          var _filteredData2 = test.filter(function (obj) {\n            return obj.hasOwnProperty(\"AvgDemand\");\n          });\n          var _p = _filteredData2.map(function (d, i) {\n            return {\n              year: new Date(d.DateTime * 1000),\n              value: d.AvgDemand,\n              category: d.Area + \"_demand\",\n              index: i + d.AvgDemand + d.Area + \"_demand\" + i\n            };\n          });\n          list = [].concat(_toConsumableArray(list), _toConsumableArray(_p));\n          console.log(_p, \"demand\");\n        }\n        if (it === \"load\") {\n          var _filteredData3 = test.filter(function (obj) {\n            return obj.hasOwnProperty(\"Load\");\n          });\n          var _p2 = _filteredData3.map(function (d, i) {\n            return {\n              year: new Date(d.DateTime * 1000),\n              value: d.Load,\n              category: d.Area + \"_load\",\n              index: i + d.Load + d.Area + d.Area + \"_demand\" + i\n            };\n          });\n          list = [].concat(_toConsumableArray(list), _toConsumableArray(_p2));\n        }\n      });\n      setData(list);\n    }\n  }\n  var getList = function getList() {\n    var test = [{\n      Area: \"Hokkaido\",\n      AvgDemand: 3245.0,\n      DateTime: 1678924800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3367.0,\n      DateTime: 1678928400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3471.0,\n      DateTime: 1678932000\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3568.0,\n      DateTime: 1678935600\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3645.0,\n      DateTime: 1678939200\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3651.0,\n      DateTime: 1678942800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3683.0,\n      DateTime: 1678946400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3684.0,\n      DateTime: 1678950000\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3815.0,\n      DateTime: 1678953600\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3999.0,\n      DateTime: 1678957200\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3992.0,\n      DateTime: 1678960800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 4010.0,\n      DateTime: 1678964400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3876.0,\n      DateTime: 1678968000\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 4074.0,\n      DateTime: 1678971600\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 4042.0,\n      DateTime: 1678975200\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3967.0,\n      DateTime: 1678978800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3862.0,\n      DateTime: 1678982400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3887.0,\n      DateTime: 1678986000\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 4004.0,\n      DateTime: 1678989600\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3870.0,\n      DateTime: 1678993200\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3718.0,\n      DateTime: 1678996800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3583.0,\n      DateTime: 1679000400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3454.0,\n      DateTime: 1679004000\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3473.0,\n      DateTime: 1679007600\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3411.0,\n      DateTime: 1679011200\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3476.0,\n      DateTime: 1679014800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3620.0,\n      DateTime: 1679018400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3741.0,\n      DateTime: 1679022000\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3858.0,\n      DateTime: 1679025600\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3814.0,\n      DateTime: 1679029200\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3779.0,\n      DateTime: 1679032800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3632.0,\n      DateTime: 1679036400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3652.0,\n      DateTime: 1679040000\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3907.0,\n      DateTime: 1679043600\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3956.0,\n      DateTime: 1679047200\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3911.0,\n      DateTime: 1679050800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3744.0,\n      DateTime: 1679054400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3764.0,\n      DateTime: 1679058000\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3725.0,\n      DateTime: 1679061600\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3649.0,\n      DateTime: 1679065200\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3781.0,\n      DateTime: 1679068800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3875.0,\n      DateTime: 1679072400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3992.0,\n      DateTime: 1679076000\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3869.0,\n      DateTime: 1679079600\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3698.0,\n      DateTime: 1679083200\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3537.0,\n      DateTime: 1679086800\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3453.0,\n      DateTime: 1679090400\n    }, {\n      Area: \"Hokkaido\",\n      AvgDemand: 3479.0,\n      DateTime: 1679094000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 10.98,\n      DateTime: 1678924800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 10.81,\n      DateTime: 1678928400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 11.14,\n      DateTime: 1678932000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 11.68,\n      DateTime: 1678935600\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 11.68,\n      DateTime: 1678939200\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 11.77,\n      DateTime: 1678942800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.97,\n      DateTime: 1678946400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 11.16,\n      DateTime: 1678950000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.34,\n      DateTime: 1678953600\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 4.01,\n      DateTime: 1678957200\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 1.32,\n      DateTime: 1678960800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 1.63,\n      DateTime: 1678964400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 1.32,\n      DateTime: 1678968000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 8.65,\n      DateTime: 1678971600\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 11.81,\n      DateTime: 1678975200\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.74,\n      DateTime: 1678978800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.16,\n      DateTime: 1678982400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 13.88,\n      DateTime: 1678986000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 16.16,\n      DateTime: 1678989600\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 14.71,\n      DateTime: 1678993200\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 13.04,\n      DateTime: 1678996800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.48,\n      DateTime: 1679000400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 11.84,\n      DateTime: 1679004000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 10.29,\n      DateTime: 1679007600\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.4,\n      DateTime: 1679011200\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.42,\n      DateTime: 1679014800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.56,\n      DateTime: 1679018400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.6,\n      DateTime: 1679022000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.82,\n      DateTime: 1679025600\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 13.18,\n      DateTime: 1679029200\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 11.55,\n      DateTime: 1679032800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.54,\n      DateTime: 1679036400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 7.98,\n      DateTime: 1679040000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 5.95,\n      DateTime: 1679043600\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 1.01,\n      DateTime: 1679047200\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 0.01,\n      DateTime: 1679050800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 0.01,\n      DateTime: 1679054400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 0.82,\n      DateTime: 1679058000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 3.14,\n      DateTime: 1679061600\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 7.88,\n      DateTime: 1679065200\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 13.42,\n      DateTime: 1679068800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 14.86,\n      DateTime: 1679072400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 16.26,\n      DateTime: 1679076000\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 15.71,\n      DateTime: 1679079600\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 14.87,\n      DateTime: 1679083200\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 14.0,\n      DateTime: 1679086800\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 13.84,\n      DateTime: 1679090400\n    }, {\n      Area: \"Hokkaido\",\n      AvgPrice: 12.13,\n      DateTime: 1679094000\n    }, {\n      Area: \"temp\",\n      AvgPrice: 13.84,\n      DateTime: 1679090400\n    }, {\n      Area: \"temp\",\n      AvgPrice: 12.13,\n      DateTime: 1679094000\n    }, {\n      Area: \"temp\",\n      AvgDemand: 13.84,\n      DateTime: 1679090400\n    }, {\n      Area: \"temp\",\n      AvgPrice: 12.13,\n      DateTime: 1679094000\n    }, {\n      Area: \"Hokkaido\",\n      Load: 13.84,\n      DateTime: 1679090400\n    }, {\n      Area: \"Hokkaido\",\n      Load: 12.13,\n      DateTime: 1679094000\n    }, {\n      Area: \"temp\",\n      Load: 13.84,\n      DateTime: 1679090400\n    }, {\n      Area: \"temp\",\n      Load: 12.13,\n      DateTime: 1679094000\n    }];\n    asyncFetch();\n    // asyncTest(test);\n  };\n\n  var asyncFetch = function asyncFetch() {\n    var startDate = dateRange && dateRange[0] ? dateRange[0].format(\"YYYY-MM-DD\") : null;\n    var endDate = dateRange && dateRange[1] ? dateRange[1].format(\"YYYY-MM-DD\") : null;\n    var apiUrl = \"http://127.0.0.1:5000/api/data?StartDate=\".concat(startDate, \"&EndDate=\").concat(endDate, \"&area=\").concat(area, \"&status=\").concat(labelName, \"&nda_values=\").concat(nda_values);\n    fetch(apiUrl).then(function (response) {\n      return response.json();\n    }).then(function (test) {\n      asyncTest(test);\n    }).catch(function (error) {\n      console.log(\"fetch data failed\", error);\n    });\n  };\n  var handleDateRangeChange = function handleDateRangeChange(dateRange) {\n    setDateRange(dateRange);\n  };\n  var config = {\n    data: data,\n    xField: \"year\",\n    yField: \"value\",\n    seriesField: \"category\",\n    xAxis: {\n      type: \"time\"\n    },\n    yAxis: {\n      label: {\n        formatter: function formatter(v) {\n          return \"\".concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\n            return \"\".concat(s, \",\");\n          });\n        }\n      }\n    }\n  };\n  useEffect(function () {\n    var ignore = false;\n    if (!ignore) {\n      setData([]);\n      setData2([]);\n      if (labelName.length === 3) {} else {\n        labelName.map(function (it) {\n          console.log(it);\n          if (it === \" price\") {\n            setAreaConfig([{\n              label: \"Hokkaido\",\n              value: \"Hokkaido\"\n            }, {\n              label: \"Tokyo\",\n              value: \"Tokyo\"\n            }, {\n              label: \"Chubu\",\n              value: \"Chubu\"\n            }, {\n              label: \"Kansai\",\n              value: \"Kansai\"\n            }, {\n              label: \"Chugoku\",\n              value: \"Chugoku\"\n            }, {\n              label: \"Shikoku\",\n              value: \"Shikoku\"\n            }, {\n              label: \"Kyushu\",\n              value: \"Kyushu\"\n            }]);\n          }\n          if (it === \"demand\") {\n            setAreaConfig([{\n              label: \"Hokkaido\",\n              value: \"Hokkaido\"\n            }, {\n              label: \"Tohoku\",\n              value: \"Tohoku\"\n            }, {\n              label: \"Tokyo\",\n              value: \"Tokyo\"\n            }, {\n              label: \"Chubu\",\n              value: \"Chubu\"\n            }, {\n              label: \"Hokuriku\",\n              value: \"Hokuriku\"\n            }, {\n              label: \"Kansai\",\n              value: \"Kansai\"\n            }, {\n              label: \"Chugoku\",\n              value: \"Chugoku\"\n            }, {\n              label: \"Shikoku\",\n              value: \"Shikoku\"\n            }, {\n              label: \"Kyushu\",\n              value: \"Kyushu\"\n            }]);\n          }\n        });\n      }\n    }\n    return function () {\n      ignore = true;\n    };\n  }, [labelName.length]);\n  function useCallbackState(od) {\n    var cbRef = useRef();\n    var _useState13 = useState(od),\n      _useState14 = _slicedToArray(_useState13, 2),\n      data = _useState14[0],\n      setData = _useState14[1];\n    useEffect(function () {\n      cbRef.current && cbRef.current(data);\n    }, [data]);\n    return [data, function (d, callback) {\n      cbRef.current = callback;\n      setData(d);\n    }];\n  }\n  var onChangeCheck = function onChangeCheck(checkedValues) {\n    console.log(checkedValues);\n    if (labelName.length < 2) {\n      setLabelName(checkedValues);\n    } else {\n      if (checkedValues.length < 2) {\n        setLabelName(checkedValues);\n      } else {\n        message.info(\"Select up to 2\");\n      }\n    }\n\n    // chooseLeave(checkedValues)\n  };\n\n  var handleChange = function handleChange(value) {\n    // chooseLeave(value)\n    setArea(value);\n  };\n  var LineCommon = function LineCommon() {\n    if (labelName.length === 2) {\n      return /*#__PURE__*/React.createElement(DualAxes, Object.assign({}, config2, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 14\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Line, Object.assign({}, config, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 14\n        }\n      }));\n    }\n  };\n  var nadConfig = [{\n    label: \"Forecast-Latest\",\n    value: \"0\"\n  }, {\n    label: \"Forecast-DA\",\n    value: \"1\"\n  }, {\n    label: \"Forecast-2DA\",\n    value: \"2\"\n  }];\n  var changeShow = function changeShow(label) {\n    var list = [];\n    TConfig.map(function (it) {\n      if (it.label === label) {\n        list.push(_objectSpread({}, it, {\n          isShow: !it.isShow\n        }));\n      } else {\n        list.push(it);\n      }\n    });\n    setTConfig(list);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Space, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker.RangePicker, {\n    onChange: handleDateRangeChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    allowClear: true,\n    defaultValue: [\"Hokkaido\"],\n    placeholder: \"Please select\",\n    onChange: handleChange,\n    options: areaConfig,\n    style: {\n      width: \"300px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    allowClear: true,\n    defaultValue: [\"price\"],\n    value: labelName,\n    placeholder: \"Please select\",\n    onChange: onChangeCheck,\n    options: plainOptions,\n    style: {\n      width: \"200px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 9\n    }\n  }), labelName.includes(\"load\") ? /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    allowClear: true,\n    value: nda_values,\n    defaultValue: [1],\n    placeholder: \"Please select\",\n    onChange: function onChange(val) {\n      return setnda_values(val);\n    },\n    options: nadConfig,\n    style: {\n      width: \"200px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Button, {\n    onClick: getList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 9\n    }\n  }, \"Load\")), /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    size: \"large\",\n    style: {\n      display: \"flex\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 7\n    }\n  }, TConfig.map(function (it, i) {\n    if (it.label === \"line\" && it.isShow) {\n      return /*#__PURE__*/React.createElement(LineCommon, {\n        style: {\n          width: \"100%\",\n          marginBottom: 20\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 20\n        }\n      });\n    }\n    if (it.label === \"pillar\" && it.isShow) {\n      return /*#__PURE__*/React.createElement(DemoColumn, {\n        style: {\n          width: \"100%\",\n          marginBottom: 20\n        },\n        key: i,\n        data1: data,\n        data2: data2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 15\n        }\n      });\n    }\n    if (it.label === \"table\" && it.isShow) {\n      return /*#__PURE__*/React.createElement(DemoTabel, {\n        style: {\n          width: \"100%\",\n          marginBottom: 20\n        },\n        key: i,\n        data: data,\n        data2: data2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 15\n        }\n      });\n    }\n  })), /*#__PURE__*/React.createElement(FloatButton.Group, {\n    trigger: \"click\",\n    type: \"primary\",\n    style: {\n      right: 24\n    },\n    icon: /*#__PURE__*/React.createElement(UnorderedListOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FloatButton, {\n    type: TConfig[0].isShow ? \"primary\" : \"\",\n    onClick: function onClick() {\n      return changeShow(\"line\");\n    },\n    icon: /*#__PURE__*/React.createElement(LineChartOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FloatButton, {\n    type: TConfig[1].isShow ? \"primary\" : \"\",\n    onClick: function onClick() {\n      return changeShow(\"pillar\");\n    },\n    icon: /*#__PURE__*/React.createElement(BarChartOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FloatButton, {\n    type: TConfig[2].isShow ? \"primary\" : \"\",\n    onClick: function onClick() {\n      return changeShow(\"table\");\n    },\n    icon: /*#__PURE__*/React.createElement(FundOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"names":["React","useEffect","useRef","useState","DualAxes","Line","Button","DatePicker","FloatButton","message","Select","Space","DemoColumn","DemoTabel","BarChartOutlined","FundOutlined","LineChartOutlined","UnorderedListOutlined","DemoLine","_useState","_useState2","_slicedToArray","data","setData","_useState3","isShow","label","_useState4","TConfig","setTConfig","_useState5","_useState6","data2","setData2","_useState7","_useState8","area","setArea","_useCallbackState","useCallbackState","_useCallbackState2","labelName","setLabelName","_useCallbackState3","_useCallbackState4","nda_values","setnda_values","_useState9","_useState10","dateRange","setDateRange","_useState11","value","_useState12","areaConfig","setAreaConfig","plainOptions","config2","xField","yField","xAxis","type","geometryOptions","geometry","seriesField","lineStyle","lineWidth","lineDash","smooth","point","asyncTest","test","list","length","filteredData","filter","obj","hasOwnProperty","filteredData2","filteredData3","includes","l1","map","d","i","year","Date","DateTime","val1","AvgPrice","category","Area","index","l2","val2","AvgDemand","Load","it","p","concat","_toConsumableArray","console","log","getList","asyncFetch","startDate","format","endDate","apiUrl","fetch","then","response","json","catch","error","handleDateRangeChange","config","yAxis","formatter","v","replace","s","ignore","od","cbRef","_useState13","_useState14","current","callback","onChangeCheck","checkedValues","info","handleChange","LineCommon","createElement","Object","assign","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","nadConfig","changeShow","push","_objectSpread","Fragment","RangePicker","onChange","mode","allowClear","defaultValue","placeholder","options","style","width","val","onClick","direction","size","display","marginBottom","key","data1","Group","trigger","right","icon"],"sources":["/Users/patrickxu/Documents/Document/Rice/Energy Cognito/Task_deliverables/Task3_Web-Application/energydash/test_dash/presentation_ver 2/src/components/Demoline.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { DualAxes, Line } from \"@ant-design/plots\";\nimport { Button, DatePicker, FloatButton, message, Select, Space } from \"antd\";\nimport DemoColumn from \"./DemoColumn\";\nimport DemoTabel from \"./DemoTabel\";\nimport {\n  BarChartOutlined,\n  FundOutlined,\n  LineChartOutlined,\n  UnorderedListOutlined,\n} from \"@ant-design/icons\";\n\nexport const DemoLine = () => {\n  const [data, setData] = useState([]);\n  const [TConfig, setTConfig] = useState([\n    {\n      isShow: true,\n      label: \"line\",\n    },\n    {\n      isShow: false,\n      label: \"pillar\",\n    },\n    {\n      isShow: false,\n      label: \"table\",\n    },\n  ]);\n  const [data2, setData2] = useState([]);\n  const [area, setArea] = useState(\"Hokkaido\");\n  const [labelName, setLabelName] = useCallbackState([\"price\"]);\n  const [nda_values, setnda_values] = useCallbackState([\"0\"]);\n  const [dateRange, setDateRange] = useState([]);\n  const [areaConfig, setAreaConfig] = useState([\n    { label: \"Hokkaido\", value: \"Hokkaido\" },\n    { label: \"Tokyo\", value: \"Tokyo\" },\n    { label: \"Chubu\", value: \"Chubu\" },\n    { label: \"Kansai\", value: \"Kansai\" },\n    { label: \"Chugoku\", value: \"Chugoku\" },\n    { label: \"Shikoku\", value: \"Shikoku\" },\n    { label: \"Kyushu\", value: \"Kyushu\" },\n  ]);\n\n  const plainOptions = [\n    { label: \"price\", value: \"price\" },\n    { label: \"demand\", value: \"demand\" },\n    { label: \"load\", value: \"load\" },\n  ];\n\n  const config2 = {\n    data: [data, data2],\n    xField: \"year\",\n    yField: [\"val1\", \"val2\"],\n    xAxis: {\n      type: \"time\",\n    },\n    geometryOptions: [\n      {\n        geometry: \"line\",\n        seriesField: \"category\", \n        lineStyle: {\n          lineWidth: 3,\n          lineDash: [5, 5],\n        },\n        smooth: true,\n      },\n      {\n        geometry: \"line\",\n        seriesField: \"category\",\n        point: {},\n      },\n    ],\n  };\n\n  function asyncTest(test) {\n    let list = [];\n\n    if (labelName.length === 2) {\n      const filteredData = test.filter((obj) => obj.hasOwnProperty(\"AvgPrice\"));\n      const filteredData2 = test.filter((obj) =>\n        obj.hasOwnProperty(\"AvgDemand\")\n      );\n      const filteredData3 = test.filter((obj) => obj.hasOwnProperty(\"Load\"));\n      if (labelName.includes(\"price\")) {\n        if (labelName.includes(\"demand\")) {\n          //price-demand\n          let l1 = filteredData.map((d, i) => ({\n            year: new Date(d.DateTime * 1000),\n            val1: d.AvgPrice,\n            category: d.Area + \"_price\",\n            index: i + d.AvgPrice + d.Area,\n          }));\n          let l2 = filteredData2.map((d, i) => ({\n            year: new Date(d.DateTime * 1000),\n            val2: d.AvgDemand,\n            category: d.Area + \"_demand\",\n            index: i + d.AvgDemand + d.Area,\n          }));\n          setData(l1);\n          setData2(l2);\n        } else {\n          //price-load\n          let l1 = filteredData.map((d, i) => ({\n            year: new Date(d.DateTime * 1000),\n            val1: d.AvgPrice,\n            category: d.Area + \"_price\",\n            index: i + d.AvgPrice + d.Area,\n          }));\n          let l2 = filteredData3.map((d, i) => ({\n            year: new Date(d.DateTime * 1000),\n            val2: d.Load,\n            category: d.Area + \"_load\",\n            index: i + d.Load + d.Area,\n          }));\n\n          setData(l1);\n          setData2(l2);\n        }\n      } else {\n        //demand-load\n        let l1 = filteredData2.map((d, i) => ({\n          year: new Date(d.DateTime * 1000),\n          val1: d.AvgDemand,\n          category: d.Area + \"_demand\",\n          index: i + d.AvgDemand + d.Area,\n        }));\n        let l2 = filteredData3.map((d, i) => ({\n          year: new Date(d.DateTime * 1000),\n          val2: d.Load,\n          category: d.Area + \"_load\",\n          index: i + d.Load + d.Area,\n        }));\n\n        setData(l1);\n        setData2(l2);\n      }\n    } else {\n      labelName.map((it) => {\n        if (it == \"price\") {\n          const filteredData = test.filter((obj) =>\n            obj.hasOwnProperty(\"AvgPrice\")\n          );\n\n          let p = filteredData.map((d, i) => ({\n            year: new Date(d.DateTime * 1000),\n            value: d.AvgPrice,\n            category: d.Area + \"_price\",\n            index: i + d.AvgPrice + d.Area + \"_price\" + i,\n          }));\n          list = [...list, ...p];\n        }\n        if (it == \"demand\") {\n          const filteredData2 = test.filter((obj) =>\n            obj.hasOwnProperty(\"AvgDemand\")\n          );\n\n          let p = filteredData2.map((d, i) => ({\n            year: new Date(d.DateTime * 1000),\n            value: d.AvgDemand,\n            category: d.Area + \"_demand\",\n            index: i + d.AvgDemand + d.Area + \"_demand\" + i,\n          }));\n          list = [...list, ...p];\n          console.log(p, \"demand\");\n        }\n        if (it === \"load\") {\n          const filteredData3 = test.filter((obj) =>\n            obj.hasOwnProperty(\"Load\")\n          );\n\n          let p = filteredData3.map((d, i) => ({\n            year: new Date(d.DateTime * 1000),\n            value: d.Load,\n            category: d.Area + \"_load\",\n            index: i + d.Load + d.Area + d.Area + \"_demand\" + i,\n          }));\n          list = [...list, ...p];\n        }\n      });\n      setData(list);\n    }\n  }\n\n  const getList = () => {\n    let test = [\n      { Area: \"Hokkaido\", AvgDemand: 3245.0, DateTime: 1678924800 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3367.0,\n        DateTime: 1678928400,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3471.0, DateTime: 1678932000 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3568.0,\n        DateTime: 1678935600,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3645.0, DateTime: 1678939200 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3651.0,\n        DateTime: 1678942800,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3683.0, DateTime: 1678946400 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3684.0,\n        DateTime: 1678950000,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3815.0, DateTime: 1678953600 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3999.0,\n        DateTime: 1678957200,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3992.0, DateTime: 1678960800 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 4010.0,\n        DateTime: 1678964400,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3876.0, DateTime: 1678968000 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 4074.0,\n        DateTime: 1678971600,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 4042.0, DateTime: 1678975200 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3967.0,\n        DateTime: 1678978800,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3862.0, DateTime: 1678982400 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3887.0,\n        DateTime: 1678986000,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 4004.0, DateTime: 1678989600 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3870.0,\n        DateTime: 1678993200,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3718.0, DateTime: 1678996800 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3583.0,\n        DateTime: 1679000400,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3454.0, DateTime: 1679004000 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3473.0,\n        DateTime: 1679007600,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3411.0, DateTime: 1679011200 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3476.0,\n        DateTime: 1679014800,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3620.0, DateTime: 1679018400 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3741.0,\n        DateTime: 1679022000,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3858.0, DateTime: 1679025600 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3814.0,\n        DateTime: 1679029200,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3779.0, DateTime: 1679032800 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3632.0,\n        DateTime: 1679036400,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3652.0, DateTime: 1679040000 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3907.0,\n        DateTime: 1679043600,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3956.0, DateTime: 1679047200 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3911.0,\n        DateTime: 1679050800,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3744.0, DateTime: 1679054400 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3764.0,\n        DateTime: 1679058000,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3725.0, DateTime: 1679061600 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3649.0,\n        DateTime: 1679065200,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3781.0, DateTime: 1679068800 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3875.0,\n        DateTime: 1679072400,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3992.0, DateTime: 1679076000 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3869.0,\n        DateTime: 1679079600,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3698.0, DateTime: 1679083200 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3537.0,\n        DateTime: 1679086800,\n      },\n      { Area: \"Hokkaido\", AvgDemand: 3453.0, DateTime: 1679090400 },\n      {\n        Area: \"Hokkaido\",\n        AvgDemand: 3479.0,\n        DateTime: 1679094000,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 10.98, DateTime: 1678924800 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 10.81,\n        DateTime: 1678928400,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 11.14, DateTime: 1678932000 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 11.68,\n        DateTime: 1678935600,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 11.68, DateTime: 1678939200 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 11.77,\n        DateTime: 1678942800,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 12.97, DateTime: 1678946400 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 11.16,\n        DateTime: 1678950000,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 12.34, DateTime: 1678953600 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 4.01,\n        DateTime: 1678957200,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 1.32, DateTime: 1678960800 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 1.63,\n        DateTime: 1678964400,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 1.32, DateTime: 1678968000 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 8.65,\n        DateTime: 1678971600,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 11.81, DateTime: 1678975200 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 12.74,\n        DateTime: 1678978800,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 12.16, DateTime: 1678982400 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 13.88,\n        DateTime: 1678986000,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 16.16, DateTime: 1678989600 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 14.71,\n        DateTime: 1678993200,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 13.04, DateTime: 1678996800 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 12.48,\n        DateTime: 1679000400,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 11.84, DateTime: 1679004000 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 10.29,\n        DateTime: 1679007600,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 12.4, DateTime: 1679011200 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 12.42,\n        DateTime: 1679014800,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 12.56, DateTime: 1679018400 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 12.6,\n        DateTime: 1679022000,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 12.82, DateTime: 1679025600 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 13.18,\n        DateTime: 1679029200,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 11.55, DateTime: 1679032800 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 12.54,\n        DateTime: 1679036400,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 7.98, DateTime: 1679040000 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 5.95,\n        DateTime: 1679043600,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 1.01, DateTime: 1679047200 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 0.01,\n        DateTime: 1679050800,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 0.01, DateTime: 1679054400 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 0.82,\n        DateTime: 1679058000,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 3.14, DateTime: 1679061600 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 7.88,\n        DateTime: 1679065200,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 13.42, DateTime: 1679068800 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 14.86,\n        DateTime: 1679072400,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 16.26, DateTime: 1679076000 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 15.71,\n        DateTime: 1679079600,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 14.87, DateTime: 1679083200 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 14.0,\n        DateTime: 1679086800,\n      },\n      { Area: \"Hokkaido\", AvgPrice: 13.84, DateTime: 1679090400 },\n      {\n        Area: \"Hokkaido\",\n        AvgPrice: 12.13,\n        DateTime: 1679094000,\n      },\n      { Area: \"temp\", AvgPrice: 13.84, DateTime: 1679090400 },\n      {\n        Area: \"temp\",\n        AvgPrice: 12.13,\n        DateTime: 1679094000,\n      },\n      { Area: \"temp\", AvgDemand: 13.84, DateTime: 1679090400 },\n      {\n        Area: \"temp\",\n        AvgPrice: 12.13,\n        DateTime: 1679094000,\n      },\n      { Area: \"Hokkaido\", Load: 13.84, DateTime: 1679090400 },\n      {\n        Area: \"Hokkaido\",\n        Load: 12.13,\n        DateTime: 1679094000,\n      },\n      { Area: \"temp\", Load: 13.84, DateTime: 1679090400 },\n      {\n        Area: \"temp\",\n        Load: 12.13,\n        DateTime: 1679094000,\n      },\n    ];\n\n    asyncFetch();\n    // asyncTest(test);\n  };\n\n  const asyncFetch = () => {\n    const startDate =\n      dateRange && dateRange[0] ? dateRange[0].format(\"YYYY-MM-DD\") : null;\n    const endDate =\n      dateRange && dateRange[1] ? dateRange[1].format(\"YYYY-MM-DD\") : null;\n    const apiUrl = `http://127.0.0.1:5000/api/data?StartDate=${startDate}&EndDate=${endDate}&area=${area}&status=${labelName}&nda_values=${nda_values}`;\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((test) => {\n        asyncTest(test);\n      })\n      .catch((error) => {\n        console.log(\"fetch data failed\", error);\n      });\n  };\n\n  const handleDateRangeChange = (dateRange) => {\n    setDateRange(dateRange);\n  };\n\n  const config = {\n    data,\n    xField: \"year\",\n    yField: \"value\",\n    seriesField: \"category\",\n    xAxis: {\n      type: \"time\",\n    },\n    yAxis: {\n      label: {\n        formatter: (v) =>\n          `${v}`.replace(/\\d{1,3}(?=(\\d{3})+$)/g, (s) => `${s},`),\n      },\n    },\n  };\n\n  useEffect(() => {\n    let ignore = false;\n\n    if (!ignore) {\n      setData([]);\n      setData2([]);\n      if (labelName.length === 3) {\n      } else {\n        labelName.map((it) => {\n          console.log(it);\n          if (it === \" price\") {\n            setAreaConfig([\n              { label: \"Hokkaido\", value: \"Hokkaido\" },\n              { label: \"Tokyo\", value: \"Tokyo\" },\n              { label: \"Chubu\", value: \"Chubu\" },\n              { label: \"Kansai\", value: \"Kansai\" },\n              { label: \"Chugoku\", value: \"Chugoku\" },\n              { label: \"Shikoku\", value: \"Shikoku\" },\n              { label: \"Kyushu\", value: \"Kyushu\" },\n            ]);\n          }\n          if (it === \"demand\") {\n            setAreaConfig([\n              { label: \"Hokkaido\", value: \"Hokkaido\" },\n              {\n                label: \"Tohoku\",\n                value: \"Tohoku\",\n              },\n              { label: \"Tokyo\", value: \"Tokyo\" },\n              { label: \"Chubu\", value: \"Chubu\" },\n              {\n                label: \"Hokuriku\",\n                value: \"Hokuriku\",\n              },\n              { label: \"Kansai\", value: \"Kansai\" },\n              {\n                label: \"Chugoku\",\n                value: \"Chugoku\",\n              },\n              { label: \"Shikoku\", value: \"Shikoku\" },\n              { label: \"Kyushu\", value: \"Kyushu\" },\n            ]);\n          }\n        });\n      }\n    }\n    return () => {\n      ignore = true;\n    };\n  }, [labelName.length]);\n\n  function useCallbackState(od) {\n    const cbRef = useRef();\n    const [data, setData] = useState(od);\n\n    useEffect(() => {\n      cbRef.current && cbRef.current(data);\n    }, [data]);\n\n    return [\n      data,\n      function (d, callback) {\n        cbRef.current = callback;\n        setData(d);\n      },\n    ];\n  }\n\n  const onChangeCheck = (checkedValues) => {\n    console.log(checkedValues);\n    if (labelName.length < 2) {\n      setLabelName(checkedValues);\n    } else {\n      if (checkedValues.length < 2) {\n        setLabelName(checkedValues);\n      } else {\n        message.info(\"Select up to 2\");\n      }\n    }\n\n    // chooseLeave(checkedValues)\n  };\n\n  const handleChange = (value) => {\n    // chooseLeave(value)\n    setArea(value);\n  };\n\n  const LineCommon = () => {\n    if (labelName.length === 2) {\n      return <DualAxes {...config2}></DualAxes>;\n    } else {\n      return <Line {...config} />;\n    }\n  };\n\n  const nadConfig = [\n    {\n      label: \"Forecast-Latest\",\n      value: \"0\",\n    },\n    {\n      label: \"Forecast-DA\",\n      value: \"1\",\n    },\n    {\n      label: \"Forecast-2DA\",\n      value: \"2\",\n    },\n  ];\n\n  const changeShow = (label) => {\n    let list = [];\n    TConfig.map((it) => {\n      if (it.label === label) {\n        list.push({\n          ...it,\n          isShow: !it.isShow,\n        });\n      } else {\n        list.push(it);\n      }\n    });\n    setTConfig(list);\n  };\n\n  return (\n    <>\n      <Space>\n        <DatePicker.RangePicker onChange={handleDateRangeChange} />\n        <Select\n          mode=\"multiple\"\n          allowClear\n          defaultValue={[\"Hokkaido\"]}\n          placeholder=\"Please select\"\n          onChange={handleChange}\n          options={areaConfig}\n          style={{ width: \"300px\" }}\n        />\n        <Select\n          mode=\"multiple\"\n          allowClear\n          defaultValue={[\"price\"]}\n          value={labelName}\n          placeholder=\"Please select\"\n          onChange={onChangeCheck}\n          options={plainOptions}\n          style={{ width: \"200px\" }}\n        />\n\n        {labelName.includes(\"load\") ? (\n          <Select\n            mode=\"multiple\"\n            allowClear\n            value={nda_values}\n            defaultValue={[1]}\n            placeholder=\"Please select\"\n            onChange={(val) => setnda_values(val)}\n            options={nadConfig}\n            style={{ width: \"200px\" }}\n          />\n        ) : (\n          <></>\n        )}\n\n        <Button onClick={getList}>Load</Button>\n      </Space>\n      <Space direction=\"vertical\" size=\"large\" style={{ display: \"flex\" }}>\n        {TConfig.map((it, i) => {\n          if (it.label === \"line\" && it.isShow) {\n            return <LineCommon style={{ width: \"100%\",marginBottom: 20  }} key={i}></LineCommon>;\n          }\n          if (it.label === \"pillar\" && it.isShow) {\n            return (\n              <DemoColumn\n                style={{ width: \"100%\",marginBottom: 20 }}\n                key={i}\n                data1={data}\n                data2={data2}\n              />\n            );\n          }\n          if (it.label === \"table\" && it.isShow) {\n            return (\n              <DemoTabel\n                style={{ width: \"100%\",marginBottom: 20  }}\n                key={i}\n                data={data}\n                data2={data2}\n              />\n            );\n          }\n        })}\n      </Space>\n\n      <FloatButton.Group\n        trigger=\"click\"\n        type=\"primary\"\n        style={{\n          right: 24,\n        }}\n        icon={<UnorderedListOutlined />}\n      >\n        <FloatButton\n          type={TConfig[0].isShow ? \"primary\" : \"\"}\n          onClick={() => changeShow(\"line\")}\n          icon={<LineChartOutlined />}\n        />\n        <FloatButton\n          type={TConfig[1].isShow ? \"primary\" : \"\"}\n          onClick={() => changeShow(\"pillar\")}\n          icon={<BarChartOutlined />}\n        />\n        <FloatButton\n          type={TConfig[2].isShow ? \"primary\" : \"\"}\n          onClick={() => changeShow(\"table\")}\n          icon={<FundOutlined />}\n        />\n      </FloatButton.Group>\n      {/*<Checkbox.Group options={plainOptions} defaultValue={labelName} onChange={onChangeCheck} />*/}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}